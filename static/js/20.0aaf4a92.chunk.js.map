{"version":3,"sources":["paperd/Panel.tsx","paperd/services/Daub.ts","paperd/services/Move.ts","paperd/services/Draw.ts","paperd/services/Union.ts","paperd/services/index.ts","paperd/PaperGraphic.tsx","paperd/index.tsx"],"names":["Panel","props","style","con","padding","cursor","div","margin","Daub","paper","oldPath","newPath","circle","hitOptions","fill","class","this","Path","tolerance","onMouseUp","event","onMouseMove","position","point","onMouseDrag","hitPath","project","hitTest","item","intersects","unite","remove","activeLayer","addChild","Circle","center","radius","strokeColor","view","on","off","namespace","Move","path","segment","hoverPath","segments","stroke","id","selected","delta","add","smooth","onMouseDown","hitResult","type","location","insert","index","Draw","start","e","closed","simplify","fillColor","Color","hue","Math","random","saturation","brightness","element","Union","console","log","ServiceCore","Services","service","serviceName","name","find","s","Error","destroy","getService","PaperGraphic","paperdom","createRef","serviceCore","rePaperSub","onRadioChange","registerService","target","value","unsubscribe","current","canvas","document","createElement","appendChild","setup","size","getBoundingClientRect","viewSize","Size","width","height","observable","fromEvent","window","pipe","debounceTime","map","subscribe","span","border","ref","Group","defaultValue","buttonStyle","onChange","Button","PureComponent","Paperd"],"mappings":"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","file":"static/js/20.0aaf4a92.chunk.js","sourcesContent":["// import { Checkbox } from 'antd'\n// import { togglePath } from '../store/paper/actions';\n\nfunction Panel(props: any) {\n  // const { paperStore: { pathStore }, dispatch } = props\n  // console.log(pathStore)\n  return (\n    <div style={style.con}>\n      显示当前元素数据\n      {/* {pathStore.map((p: any, k: any) =>\n        <div key={k} style={{\n          backgroundColor: p.style.fillColor.toCanvasStyle(), ...style.div\n        }}>\n          <Checkbox checked={p.visible} onChange={v => dispatch(togglePath(p.id, v.target.checked))} />\n          {p.id}\n        </div>\n      )} */}\n    </div>\n  )\n}\nexport default Panel\nconst style: { [key: string]: React.CSSProperties } = {\n  con: {\n    padding: 10,\n    cursor: 'pointer'\n  },\n  div: {\n    margin: '5px 0'\n  }\n}","import { Service } from \".\";\n\n// import store from \"../../store\";\n// import { addPath, removePath } from \"../../store/paper/actions\";\n\nexport class Daub implements Service {\n  static namespace = 'daub'\n  oldPath: paper.Path | null = null\n  newPath: paper.Path | null = null\n  circle: paper.Path.Circle\n  hitOptions = {\n    fill: true,\n    class: this.paper.Path,\n    tolerance: 30\n  }\n  constructor(public readonly paper: paper.PaperScope) {\n    this.circle = new paper.Path.Circle({\n      center: [80, 50],\n      radius: 30,\n      strokeColor: 'black'\n    })\n\n    this.paper.view.on('mouseup', this.onMouseUp)\n    this.paper.view.on('mousemove', this.onMouseMove)\n    this.paper.view.on('mousedrag', this.onMouseDrag)\n  }\n  onMouseUp = (event: any) => {\n    //保存path\n    if (this.oldPath && this.newPath) {\n      //删除老的 \n      // store.dispatch(removePath(this.oldPath.id))\n      //保存新的\n      // store.dispatch(addPath(this.newPath))\n      this.oldPath = this.newPath = null\n    }\n  }\n  onMouseMove = (event: any) => {\n    this.circle.position = event.point\n  }\n  onMouseDrag = (event: any) => {\n    const { point } = event\n    this.circle.position = point\n\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\n    const { item: hitPath } = hitResult\n    if (hitPath) {\n      //判断相交\n      if (hitPath.intersects(this.circle)) {\n        if (!this.oldPath) {\n          this.oldPath = hitPath as paper.Path\n        }\n        this.newPath = (hitPath as any).unite(this.circle)\n        hitPath.remove()\n        this.paper.project!.activeLayer.addChild(this.newPath!)\n      }\n    }\n  }\n\n  destroy(): void {\n    this.paper.view.off('mouseup', this.onMouseUp)\n    this.paper.view.off('mousemove', this.onMouseMove)\n    this.paper.view.off('mousedrag', this.onMouseDrag)\n    this.circle.remove()\n  }\n}","import { Service } from \".\";\n\nexport class Move implements Service {\n  static namespace = 'move'\n  path: null | paper.Path = null\n  segment: paper.Segment | null = null\n  hoverPath: paper.Path | null = null\n  hitOptions = {\n    segments: true,\n    stroke: true,\n    fill: true,\n    tolerance: 5\n  }\n  constructor(public readonly paper: paper.PaperScope) {\n    this.paper.view.on('mousemove', this.onMouseMove)\n    this.paper.view.on('mousedrag', this.onMouseDrag)\n    this.paper.view.on('mousedown', this.onMouseDown)\n  }\n\n  onMouseMove = (event: any) => {\n    const { point } = event\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\n    const { item: hitPath } = hitResult\n    if (hitPath) {\n      if (this.hoverPath && this.hoverPath.id !== hitPath.id) {\n        this.hoverPath.selected = false\n      }\n      this.hoverPath = hitPath as paper.Path\n      hitPath.selected = true\n    } else {\n      if (this.hoverPath && this.hoverPath.selected) {\n        this.hoverPath.selected = false\n      }\n    }\n  }\n\n  onMouseDrag = (event: any) => {\n    const { delta } = event\n    if (this.segment) {\n      this.segment.point = this.segment.point!.add(delta)\n      this.path!.smooth()\n    } else if (this.path) {\n      this.path.position = this.path.position!.add(delta)\n    }\n  }\n  onMouseDown = (event: any) => {\n    this.path = this.segment = null\n    const { point } = event\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions)\n    if (!hitResult) return\n    this.path = hitResult.item as paper.Path\n    const { type } = hitResult\n    if (type === 'segment') {\n      this.segment = hitResult.segment\n    }\n    if (type === 'stroke') {\n      const location = hitResult.location\n      this.segment = this.path!.insert(location!.index + 1, point)\n    }\n    if (type === 'fill') {\n      this.paper.project!.activeLayer.addChild(hitResult.item!);\n    }\n  }\n  destroy(): void {\n    this.paper.view.off('mousemove', this.onMouseMove)\n    this.paper.view.off('mousedrag', this.onMouseDrag)\n    this.paper.view.off('mousedown', this.onMouseDown)\n  }\n}\n","import { Service } from \".\";\n\n// import store from \"../../store\";\n// import { addPath } from \"../../store/paper/actions\";\n\nexport class Draw implements Service {\n  static namespace = 'draw'\n  path: paper.Path | null = null\n  start: paper.Point | null = null\n  constructor(public paper: paper.PaperScope) {\n    this.paper.view.on('mouseup', this.onMouseUp)\n    this.paper.view.on('mousedrag', this.onMouseDrag)\n    this.paper.view.on('mousedown', this.onMouseDown)\n    this.paper.view.element.style.cursor = 'crosshair'\n  }\n  onMouseUp = (e: any) => {\n    if (!this.path || !this.start) return\n    this.path.closed = true\n    this.path.simplify()\n    // this.path.smooth()\n    // store.dispatch(addPath(this.path))\n  }\n  onMouseDrag = (e: any) => {\n    if (!this.path) return\n    this.path.add(e.point)\n  }\n  onMouseDown = (e: any) => {\n    this.path = new this.paper.Path()\n    this.path.fillColor = new this.paper.Color({\n      hue: Math.random() * 360,\n      saturation: 1,\n      brightness: 1\n    })\n\n    this.path.strokeColor = new this.paper.Color(0, 0, 0, 1)\n    this.start = e.point\n    this.path.add(e.point)\n  }\n  destroy(): void {\n    this.paper.view.off('mouseup', this.onMouseUp)\n    this.paper.view.off('mousedrag', this.onMouseDrag)\n    this.paper.view.off('mousedown', this.onMouseDown)\n    this.paper.view.element.style.cursor = 'auto'\n  }\n}\n","import { Service } from \".\";\n\nexport class Union implements Service {\n  static namespace = 'union'\n  path: null | paper.Path = null\n  \n  hitOptions = {\n    // segments: true,\n    // stroke: true,\n    fill: true,\n    tolerance: 5\n  }\n  constructor(public readonly paper: paper.PaperScope) {\n    this.paper.view.on('mousemove', this.onMouseMove)\n    this.paper.view.on('mousedrag', this.onMouseDrag)\n    this.paper.view.on('mousedown', this.onMouseDown)\n  }\n\n  onMouseMove = (event: any) => {\n\n  }\n\n  onMouseDrag = (event: any) => {\n    const { delta } = event\n    if (this.path) {\n      this.path.position = this.path.position!.add(delta)\n    }\n  }\n  onMouseDown = (event: any) => {\n    const { point } = event\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\n    const { item } = hitResult\n    this.path = item as paper.Path | null\n    console.log(this.path)\n  }\n  destroy(): void {\n    this.paper.view.off('mousemove', this.onMouseMove)\n    this.paper.view.off('mousedrag', this.onMouseDrag)\n    this.paper.view.off('mousedown', this.onMouseDown)\n  }\n}","import { Daub } from \"./Daub\";\nimport { Move } from \"./Move\";\nimport { Draw } from \"./Draw\";\nimport { Union } from \"./Union\";\n\nexport abstract class Service {\n  static namespace: string\n  constructor(public readonly paper: paper.PaperScope) { }\n  abstract destroy(): void\n}\n\nexport type ServiceType = Daub | Move | Draw | Union\nexport class ServiceCore {\n  Services = [Daub, Move, Draw, Union]\n  service: ServiceType | null = null\n  serviceName: string | null = null\n  constructor(public readonly paper: paper.PaperScope) { }\n\n  getService(name: string) {\n    return this.Services.find(s => s.namespace === name)\n  }\n  registerService(name: string) {\n    //verification service is Repeat\n    if (name === this.serviceName) {\n      throw new Error('The service has not changed!')\n    }\n    //cancellation service\n    if (this.service) {\n      this.service.destroy()\n      this.service = null\n    }\n    //switch service\n    const service = this.getService(name)\n    if (!service) throw new Error('This service not is exist!')\n    this.service = new service(this.paper)\n    this.serviceName = service.namespace\n  }\n}","import { createRef, PureComponent } from 'react'\nimport { Row, Col, Radio } from 'antd'\nimport * as paper from 'paper'\nimport Panel from './Panel';\nimport { ServiceCore } from './services';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\n\nexport default class PaperGraphic extends PureComponent {\n  paperdom = createRef<HTMLDivElement>()\n  paper: paper.PaperScope\n  serviceCore: ServiceCore\n  rePaperSub: Subscription | null = null\n  constructor(props: {}) {\n    super(props)\n    this.paper = new paper.PaperScope()\n    this.serviceCore = new ServiceCore(this.paper)\n  }\n\n  componentWillUnmount() {\n    this.rePaperSub?.unsubscribe()\n  }\n  componentDidMount() {\n    const paperdom = this.paperdom.current\n    if (!paperdom) return\n    const canvas = document.createElement('canvas')\n    paperdom.appendChild(canvas)\n\n    this.paper.setup(canvas)\n    this.serviceCore.registerService('draw')\n\n    const size = paperdom.getBoundingClientRect()\n    this.paper.view.viewSize = new this.paper.Size(\n      size.width, size.height\n    )\n    const observable = fromEvent(window, 'resize').pipe(\n      debounceTime(300),\n      map(e => paperdom.getBoundingClientRect())\n    )\n    this.rePaperSub = observable.subscribe(e => {\n      this.paper.view.viewSize = new this.paper.Size(e.width, e.height)\n    })\n  }\n\n  onRadioChange = (e: RadioChangeEvent) => {\n    if (!this.serviceCore) return\n    this.serviceCore.registerService(e.target.value)\n  }\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col\n            span={18}\n            style={{ border: '1px solid', height: 500 }}\n            ref={this.paperdom}\n          />\n          <Col span={6}><Panel /></Col>\n        </Row>\n        <Radio.Group\n          defaultValue=\"draw\"\n          buttonStyle=\"solid\"\n          onChange={this.onRadioChange}\n        >\n          <Radio.Button value=\"draw\">勾画</Radio.Button>\n          <Radio.Button value=\"move\">移动</Radio.Button>\n          <Radio.Button value=\"daub\">涂抹</Radio.Button>\n          <Radio.Button value=\"union\">联合</Radio.Button>\n          <Radio.Button value=\"hide\">隐藏</Radio.Button>\n          <Radio.Button value=\"show\">显示</Radio.Button>\n        </Radio.Group>\n      </div>\n    )\n  }\n}","import PaperGraphic from \"./PaperGraphic\";\n\nexport default function Paperd() {\n  return(\n    <div>\n      <PaperGraphic/>\n    </div>\n  )\n}"],"sourceRoot":""}