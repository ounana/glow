{"version":3,"sources":["rxjsd/Progress.tsx"],"names":["RxProgress","useState","percent","setPercent","useEffect","subscription","interval","pipe","take","map","v","subscribe","x","unsubscribe"],"mappings":"4MAKe,SAASA,IAAc,IAAD,EACNC,mBAAS,GADH,mBAC7BC,EAD6B,KACpBC,EADoB,KAepC,OAbAC,qBAAU,WACT,IAIMC,EAJaC,YAAS,IAAIC,KAC/BC,YAAK,IACLC,aAAI,SAAAC,GAAC,OAAc,IAATA,EAAI,OAEiBC,WAAU,SAAAC,GACzCT,EAAWS,MAGZ,OAAO,WACNP,EAAaQ,iBAEZ,IAEF,qCACC,4CACA,cAAC,IAAD,CAAUX,QAASA","file":"static/js/24.abf76827.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { interval } from 'rxjs'\nimport { take, map } from 'rxjs/operators'\nimport { Progress } from 'antd'\n\nexport default function RxProgress() {\n\tconst [percent, setPercent] = useState(0)\n\tuseEffect(() => {\n\t\tconst observable = interval(60).pipe(\n\t\t\ttake(10),\n\t\t\tmap(v => (v + 1) * 10)\n\t\t)\n\t\tconst subscription = observable.subscribe(x => {\n\t\t\tsetPercent(x)\n\t\t})\n\n\t\treturn () => {\n\t\t\tsubscription.unsubscribe()\n\t\t}\n\t}, [])\n\treturn (\n\t\t<>\n\t\t\t<h1>RxProgress</h1>\n\t\t\t<Progress percent={percent} />\n\t\t</>\n\t)\n}"],"sourceRoot":""}