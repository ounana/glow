{"version":3,"sources":["rxjsd/Observable.tsx"],"names":["RxObservable","useEffect","subscription","Observable","sbr","next","setTimeout","complete","subscribe","v","console","log","error","e","unsubscribe"],"mappings":"+FAAA,yEAGe,SAASA,IAsBtB,OArBAC,qBAAU,WACR,IASMC,EATI,IAAIC,KAAmB,SAAAC,GAC/BA,EAAIC,KAAK,GACTD,EAAIC,KAAK,GACTD,EAAIC,KAAK,GACTC,YAAW,WACTF,EAAIC,KAAK,GACTD,EAAIG,aACH,QAEoBC,UAAU,CACjCH,KADiC,SAC5BI,GAAKC,QAAQC,IAAIF,IACtBG,MAFiC,SAE3BC,GAAKH,QAAQC,IAAIE,IACvBN,SAHiC,WAI/BG,QAAQC,IAAI,QACZT,EAAaY,mBAIhB,IAGD,8BACE","file":"static/js/23.0314ee4a.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Observable } from 'rxjs'\n\nexport default function RxObservable() {\n  useEffect(() => {\n    let obs = new Observable<number>(sbr => {\n      sbr.next(1)\n      sbr.next(2)\n      sbr.next(3)\n      setTimeout(() => {\n        sbr.next(4)\n        sbr.complete()\n      }, 1000)\n    })\n    const subscription = obs.subscribe({\n      next(v) { console.log(v) },\n      error(e) { console.log(e) },\n      complete() {\n        console.log('done')\n        subscription.unsubscribe()\n      }\n    })\n\n  }, [])\n\n  return (\n    <div>\n      <h1>RxObservable</h1>\n    </div>\n  )\n}"],"sourceRoot":""}