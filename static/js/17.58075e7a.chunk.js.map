{"version":3,"sources":["tensorflow/data.ts","tensorflow/TestTensor.tsx","tensorflow/index.tsx"],"names":["data","TestTensor","testimgRef","createRef","a","tf","console","log","print","arraySync","dataSync","xs","ys","model","add","dense","units","inputShape","compile","loss","optimizer","summary","fit","epochs","callbacks","onEpochEnd","_","logs","onTrainEnd","res","predict","d1","map","d","d2","length","activation","adam","epoch","testVal","prediction","pIndex","PureComponent","Tensorflowd"],"mappings":"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,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,EAAG,EAAG,IAAK,GAAI,CAAC,eAClB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,EAAG,IAAK,EAAG,GAAI,CAAC,eAClB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,EAAG,KAAM,CAAC,eACpB,CAAC,CAAC,EAAG,IAAK,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,EAAG,IAAK,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,EAAG,IAAK,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,eACtB,CAAC,CAAC,EAAG,IAAK,IAAK,GAAI,CAAC,eACpB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,eACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,eACxB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,EAAG,GAAI,CAAC,cACpB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,EAAG,IAAK,EAAG,KAAM,CAAC,cACpB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,GAAI,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,EAAG,EAAG,IAAK,KAAM,CAAC,cACpB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,IAAK,EAAG,KAAM,CAAC,cACtB,CAAC,CAAC,IAAK,EAAG,IAAK,GAAI,CAAC,cACpB,CAAC,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,cACxB,CAAC,CAAC,IAAK,EAAG,IAAK,KAAM,CAAC,e,OCrIHC,E,4MACnBC,WAAaC,sB,8FACb,sBAAAC,EAAA,0F,0EAIA,WAEE,IAAMA,EAAIC,IAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IAC5CC,QAAQC,IAAIH,GACZA,EAAEI,QAEFF,QAAQC,IAAIH,EAAEK,aAEdH,QAAQC,IAAIH,EAAEM,c,qBAEhB,WACEL,IAAY,CAAC,EAAG,EAAG,EAAG,IAAIG,QAC1BH,IAAY,CAAC,EAAG,GAAI,CAAC,EAAG,IAAIG,QAE5BH,IAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAIG,QACjDH,IAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAIG,U,mBAEtD,WAEE,IAAMG,EAAKN,IAAY,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IACnCO,EAAKP,IAAY,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,IAGnCQ,EAAQR,MAEdQ,EAAMC,IAAIT,IAAUU,MAAM,CAAEC,MAAO,EAAGC,WAAY,CAAC,MAEnDJ,EAAMK,QAAQ,CAAEC,KAAM,mBAAoBC,UAAW,QACrDP,EAAMQ,UACNR,EAAMS,IAAIX,EAAIC,EAAI,CAChBW,OAAQ,IACRC,UAAW,CACTC,WAAY,SAACC,EAAGC,GACdrB,QAAQC,IAAIoB,IAEdC,WAAY,WACV,IAAMC,EAAMhB,EAAMiB,QAAQzB,IAAY,CAAC,IAAK,CAAC,EAAG,KAChDC,QAAQC,IAAIsB,EAAInB,kB,uBAMxB,WAME,IAAMqB,EAAK/B,EAAKgC,KAAI,SAAAC,GAAC,OAAIA,EAAE,MACrBC,EAAKlC,EAAKgC,KAAI,SAAAC,GAAC,MAAI,CACX,WAAZA,EAAE,GAAG,GAAkB,EAAI,EACf,cAAZA,EAAE,GAAG,GAAqB,EAAI,EAClB,eAAZA,EAAE,GAAG,GAAsB,EAAI,MAE3BtB,EAAKN,IAAY0B,EAAI,CAACA,EAAGI,OAAQ,IACjCvB,EAAKP,IAAY6B,EAAI,CAACA,EAAGC,OAAQ,IAGjCtB,EAAQR,MAGdQ,EAAMC,IAAIT,IAAUU,MAAM,CACxBE,WAAY,CALQ,GAMpBmB,WAAY,UACZpB,MAAO,KAGTH,EAAMC,IAAIT,IAAUU,MAAM,CAAEqB,WAAY,UAAWpB,MAAO,KAC1DH,EAAMK,QAAQ,CAAEC,KAAM,0BAA2BC,UAAWf,IAASgC,KAAK,OAE1ExB,EAAMS,IAAIX,EAAIC,EAAI,CAChBW,OAAQ,IACRC,UAAW,CACTC,WAAY,SAACa,EAAOX,GAClBrB,QAAQC,IAAI,UAAY+B,EAAQ,UAAYX,EAAKR,OAEnDS,WAAY,WAMV,IAAMW,EAAUlC,IAAY,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,EAAG,IAChDmC,EAAa3B,EAAMiB,QAAQS,GACjCC,EAAWhC,QAEX,IAAMiC,EAAcpC,IAAUmC,EAAY,GAAG9B,WAE7CJ,QAAQC,IADW,CAAC,SAAU,YAAa,cACpBkC,U,oBAK/B,WACE,OACE,8BACE,2D,GAvGgCC,iBCnBzB,SAASC,IACtB,OACE,8BACE,cAAC,EAAD","file":"static/js/17.58075e7a.chunk.js","sourcesContent":["export const type = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']\n\ntype Data = [number[], string[]][]\n\nexport const data: Data = [\n  [[5.1, 3.5, 1.4, 0.2], ['setosa']],\n  [[4.9, 3, 1.4, 0.2], ['setosa']],\n  [[4.7, 3.2, 1.3, 0.2], ['setosa']],\n  [[4.6, 3.1, 1.5, 0.2], ['setosa']],\n  [[5, 3.6, 1.4, 0.2], ['setosa']],\n  [[5.4, 3.9, 1.7, 0.4], ['setosa']],\n  [[4.6, 3.4, 1.4, 0.3], ['setosa']],\n  [[5, 3.4, 1.5, 0.2], ['setosa']],\n  [[4.4, 2.9, 1.4, 0.2], ['setosa']],\n  [[4.9, 3.1, 1.5, 0.1], ['setosa']],\n  [[5.4, 3.7, 1.5, 0.2], ['setosa']],\n  [[4.8, 3.4, 1.6, 0.2], ['setosa']],\n  [[4.8, 3, 1.4, 0.1], ['setosa']],\n  [[4.3, 3, 1.1, 0.1], ['setosa']],\n  [[5.8, 4, 1.2, 0.2], ['setosa']],\n  [[5.7, 4.4, 1.5, 0.4], ['setosa']],\n  [[5.4, 3.9, 1.3, 0.4], ['setosa']],\n  [[5.1, 3.5, 1.4, 0.3], ['setosa']],\n  [[5.7, 3.8, 1.7, 0.3], ['setosa']],\n  [[5.1, 3.8, 1.5, 0.3], ['setosa']],\n  [[5.4, 3.4, 1.7, 0.2], ['setosa']],\n  [[5.1, 3.7, 1.5, 0.4], ['setosa']],\n  [[4.6, 3.6, 1, 0.2], ['setosa']],\n  [[5.1, 3.3, 1.7, 0.5], ['setosa']],\n  [[4.8, 3.4, 1.9, 0.2], ['setosa']],\n  [[5, 3, 1.6, 0.2], ['setosa']],\n  [[5, 3.4, 1.6, 0.4], ['setosa']],\n  [[5.2, 3.5, 1.5, 0.2], ['setosa']],\n  [[5.2, 3.4, 1.4, 0.2], ['setosa']],\n  [[4.7, 3.2, 1.6, 0.2], ['setosa']],\n  [[4.8, 3.1, 1.6, 0.2], ['setosa']],\n  [[5.4, 3.4, 1.5, 0.4], ['setosa']],\n  [[5.2, 4.1, 1.5, 0.1], ['setosa']],\n  [[5.5, 4.2, 1.4, 0.2], ['setosa']],\n  [[4.9, 3.1, 1.5, 0.1], ['setosa']],\n  [[5, 3.2, 1.2, 0.2], ['setosa']],\n  [[5.5, 3.5, 1.3, 0.2], ['setosa']],\n  [[4.9, 3.1, 1.5, 0.1], ['setosa']],\n  [[4.4, 3, 1.3, 0.2], ['setosa']],\n  [[5.1, 3.4, 1.5, 0.2], ['setosa']],\n  [[5, 3.5, 1.3, 0.3], ['setosa']],\n  [[4.5, 2.3, 1.3, 0.3], ['setosa']],\n  [[4.4, 3.2, 1.3, 0.2], ['setosa']],\n  [[5, 3.5, 1.6, 0.6], ['setosa']],\n  [[5.1, 3.8, 1.9, 0.4], ['setosa']],\n  [[4.8, 3, 1.4, 0.3], ['setosa']],\n  [[5.1, 3.8, 1.6, 0.2], ['setosa']],\n  [[4.6, 3.2, 1.4, 0.2], ['setosa']],\n  [[5.3, 3.7, 1.5, 0.2], ['setosa']],\n  [[5, 3.3, 1.4, 0.2], ['setosa']],\n  [[7, 3.2, 4.7, 1.4], ['versicolor']],\n  [[6.4, 3.2, 4.5, 1.5], ['versicolor']],\n  [[6.9, 3.1, 4.9, 1.5], ['versicolor']],\n  [[5.5, 2.3, 4, 1.3], ['versicolor']],\n  [[6.5, 2.8, 4.6, 1.5], ['versicolor']],\n  [[5.7, 2.8, 4.5, 1.3], ['versicolor']],\n  [[6.3, 3.3, 4.7, 1.6], ['versicolor']],\n  [[4.9, 2.4, 3.3, 1], ['versicolor']],\n  [[6.6, 2.9, 4.6, 1.3], ['versicolor']],\n  [[5.2, 2.7, 3.9, 1.4], ['versicolor']],\n  [[5, 2, 3.5, 1], ['versicolor']],\n  [[5.9, 3, 4.2, 1.5], ['versicolor']],\n  [[6, 2.2, 4, 1], ['versicolor']],\n  [[6.1, 2.9, 4.7, 1.4], ['versicolor']],\n  [[5.6, 2.9, 3.6, 1.3], ['versicolor']],\n  [[6.7, 3.1, 4.4, 1.4], ['versicolor']],\n  [[5.6, 3, 4.5, 1.5], ['versicolor']],\n  [[5.8, 2.7, 4.1, 1], ['versicolor']],\n  [[6.2, 2.2, 4.5, 1.5], ['versicolor']],\n  [[5.6, 2.5, 3.9, 1.1], ['versicolor']],\n  [[5.9, 3.2, 4.8, 1.8], ['versicolor']],\n  [[6.1, 2.8, 4, 1.3], ['versicolor']],\n  [[6.3, 2.5, 4.9, 1.5], ['versicolor']],\n  [[6.1, 2.8, 4.7, 1.2], ['versicolor']],\n  [[6.4, 2.9, 4.3, 1.3], ['versicolor']],\n  [[6.6, 3, 4.4, 1.4], ['versicolor']],\n  [[6.8, 2.8, 4.8, 1.4], ['versicolor']],\n  [[6.7, 3, 5, 1.7], ['versicolor']],\n  [[6, 2.9, 4.5, 1.5], ['versicolor']],\n  [[5.7, 2.6, 3.5, 1], ['versicolor']],\n  [[5.5, 2.4, 3.8, 1.1], ['versicolor']],\n  [[5.5, 2.4, 3.7, 1], ['versicolor']],\n  [[5.8, 2.7, 3.9, 1.2], ['versicolor']],\n  [[6, 2.7, 5.1, 1.6], ['versicolor']],\n  [[5.4, 3, 4.5, 1.5], ['versicolor']],\n  [[6, 3.4, 4.5, 1.6], ['versicolor']],\n  [[6.7, 3.1, 4.7, 1.5], ['versicolor']],\n  [[6.3, 2.3, 4.4, 1.3], ['versicolor']],\n  [[5.6, 3, 4.1, 1.3], ['versicolor']],\n  [[5.5, 2.5, 4, 1.3], ['versicolor']],\n  [[5.5, 2.6, 4.4, 1.2], ['versicolor']],\n  [[6.1, 3, 4.6, 1.4], ['versicolor']],\n  [[5.8, 2.6, 4, 1.2], ['versicolor']],\n  [[5, 2.3, 3.3, 1], ['versicolor']],\n  [[5.6, 2.7, 4.2, 1.3], ['versicolor']],\n  [[5.7, 3, 4.2, 1.2], ['versicolor']],\n  [[5.7, 2.9, 4.2, 1.3], ['versicolor']],\n  [[6.2, 2.9, 4.3, 1.3], ['versicolor']],\n  [[5.1, 2.5, 3, 1.1], ['versicolor']],\n  [[5.7, 2.8, 4.1, 1.3], ['versicolor']],\n  [[6.3, 3.3, 6, 2.5], ['virginica']],\n  [[5.8, 2.7, 5.1, 1.9], ['virginica']],\n  [[7.1, 3, 5.9, 2.1], ['virginica']],\n  [[6.3, 2.9, 5.6, 1.8], ['virginica']],\n  [[6.5, 3, 5.8, 2.2], ['virginica']],\n  [[7.6, 3, 6.6, 2.1], ['virginica']],\n  [[4.9, 2.5, 4.5, 1.7], ['virginica']],\n  [[7.3, 2.9, 6.3, 1.8], ['virginica']],\n  [[6.7, 2.5, 5.8, 1.8], ['virginica']],\n  [[7.2, 3.6, 6.1, 2.5], ['virginica']],\n  [[6.5, 3.2, 5.1, 2], ['virginica']],\n  [[6.4, 2.7, 5.3, 1.9], ['virginica']],\n  [[6.8, 3, 5.5, 2.1], ['virginica']],\n  [[5.7, 2.5, 5, 2], ['virginica']],\n  [[5.8, 2.8, 5.1, 2.4], ['virginica']],\n  [[6.4, 3.2, 5.3, 2.3], ['virginica']],\n  [[6.5, 3, 5.5, 1.8], ['virginica']],\n  [[7.7, 3.8, 6.7, 2.2], ['virginica']],\n  [[7.7, 2.6, 6.9, 2.3], ['virginica']],\n  [[6, 2.2, 5, 1.5], ['virginica']],\n  [[6.9, 3.2, 5.7, 2.3], ['virginica']],\n  [[5.6, 2.8, 4.9, 2], ['virginica']],\n  [[7.7, 2.8, 6.7, 2], ['virginica']],\n  [[6.3, 2.7, 4.9, 1.8], ['virginica']],\n  [[6.7, 3.3, 5.7, 2.1], ['virginica']],\n  [[7.2, 3.2, 6, 1.8], ['virginica']],\n  [[6.2, 2.8, 4.8, 1.8], ['virginica']],\n  [[6.1, 3, 4.9, 1.8], ['virginica']],\n  [[6.4, 2.8, 5.6, 2.1], ['virginica']],\n  [[7.2, 3, 5.8, 1.6], ['virginica']],\n  [[7.4, 2.8, 6.1, 1.9], ['virginica']],\n  [[7.9, 3.8, 6.4, 2], ['virginica']],\n  [[6.4, 2.8, 5.6, 2.2], ['virginica']],\n  [[6.3, 2.8, 5.1, 1.5], ['virginica']],\n  [[6.1, 2.6, 5.6, 1.4], ['virginica']],\n  [[7.7, 3, 6.1, 2.3], ['virginica']],\n  [[6.3, 3.4, 5.6, 2.4], ['virginica']],\n  [[6.4, 3.1, 5.5, 1.8], ['virginica']],\n  [[6, 3, 4.8, 1.8], ['virginica']],\n  [[6.9, 3.1, 5.4, 2.1], ['virginica']],\n  [[6.7, 3.1, 5.6, 2.4], ['virginica']],\n  [[6.9, 3.1, 5.1, 2.3], ['virginica']],\n  [[5.8, 2.7, 5.1, 1.9], ['virginica']],\n  [[6.8, 3.2, 5.9, 2.3], ['virginica']],\n  [[6.7, 3.3, 5.7, 2.5], ['virginica']],\n  [[6.7, 3, 5.2, 2.3], ['virginica']],\n  [[6.3, 2.5, 5, 1.9], ['virginica']],\n  [[6.5, 3, 5.2, 2], ['virginica']],\n  [[6.2, 3.4, 5.4, 2.3], ['virginica']],\n  [[5.9, 3, 5.1, 1.8], ['virginica']]\n]","import { createRef, PureComponent } from \"react\";\nimport * as tf from '@tensorflow/tfjs';\nimport { data } from './data'\n\n/**\n * Tensor -> 张量\n * \n * tf.tensor<R extends Rank>(\n * values: TensorLike, shape?: ShapeMap[R], dtype?: DataType\n * ): Tensor<R>\n * \n * values 值\n * shape  形状\n * dtype  类型\n * \n * 1d = [1,2,3]            shape [3]\n * 2d = [[1],[2],[3]]      shape [3, 1]\n * 3d = [[[1,2]],[[3,4]]]  shape [2, 1, 2]\n * 4d = [[[[1]]],[[[2]]]]  shpe  [2, 1, 1, 1]\n */\n\nexport default class TestTensor extends PureComponent {\n  testimgRef = createRef<HTMLImageElement>()\n  async componentDidMount() {\n    // this.trainIris()\n  }\n\n  tensor() {\n    //一个2层张量，第一层三个值，第二层两个值\n    const a = tf.tensor([1, 2, 3, 4, 5, 6], [3, 2])\n    console.log(a)\n    a.print()\n    //返回多维数组的值\n    console.log(a.arraySync())\n    // 返回张量所包含的所有值的一维数组\n    console.log(a.dataSync())\n  }\n  tensorD() {\n    tf.tensor1d([1, 2, 3, 4]).print()\n    tf.tensor2d([1, 2], [2, 1]).print()\n    /** shape 表示每一层的个数 */\n    tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [4, 2, 1]).print()\n    tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 1, 2]).print()\n  }\n  train() {\n    // simulation -> y = 2x - 1\n    const xs = tf.tensor2d([1, 2, 3, 4], [4, 1])\n    const ys = tf.tensor2d([1, 3, 5, 7], [4, 1])\n\n    //定义线性回归模型\n    const model = tf.sequential()\n    //一个神经元 一个输入参数\n    model.add(tf.layers.dense({ units: 1, inputShape: [1] }))\n    //损失函数 优化器\n    model.compile({ loss: 'meanSquaredError', optimizer: 'sgd' })\n    model.summary()\n    model.fit(xs, ys, {\n      epochs: 500,\n      callbacks: {\n        onEpochEnd: (_, logs) => {\n          console.log(logs)\n        },\n        onTrainEnd: () => {\n          const res = model.predict(tf.tensor2d([10], [1, 1])) as tf.Tensor<tf.Rank>\n          console.log(res.dataSync())\n        }\n      }\n    })\n  }\n\n  trainIris() {\n    /**\n     * d =[[[5.1, 3.5, 1.4, 0.2], ['setosa']], [[7, 3.2, 4.7, 1.4], ['versicolor']]]\n     * xs = [[5.1, 3.5, 1.4, 0.2], [7, 3.2, 4.7, 1.4]]\n     * ys = [[1, 0, 0], [0, 1, 0]]\n     */\n    const d1 = data.map(d => d[0])\n    const d2 = data.map(d => [\n      d[1][0] === 'setosa' ? 1 : 0,\n      d[1][0] === \"virginica\" ? 1 : 0,\n      d[1][0] === \"versicolor\" ? 1 : 0\n    ])\n    const xs = tf.tensor2d(d1, [d1.length, 4])\n    const ys = tf.tensor2d(d2, [d2.length, 3])\n\n    const numOfFeatures = 4\n    const model = tf.sequential()\n\n    //隐藏层\n    model.add(tf.layers.dense({\n      inputShape: [numOfFeatures], // 4个输入值\n      activation: \"sigmoid\",\n      units: 5 //神经元\n    }))\n\n    model.add(tf.layers.dense({ activation: \"softmax\", units: 3 }))\n    model.compile({ loss: \"categoricalCrossentropy\", optimizer: tf.train.adam(0.06) })\n\n    model.fit(xs, ys, {\n      epochs: 100,\n      callbacks: {\n        onEpochEnd: (epoch, logs: any) => {\n          console.log(\"Epoch: \" + epoch + \" Loss: \" + logs.loss)\n        },\n        onTrainEnd: () => {\n          // Setosa\n          // const testVal = tf.tensor2d([4.4, 2.9, 1.4, 0.2], [1, 4])\n          // Versicolor\n          // const testVal = tf.tensor2d([6.4, 3.2, 4.5, 1.5], [1, 4])\n          // Virginica\n          const testVal = tf.tensor2d([5.8, 2.7, 5.1, 1.9], [1, 4])\n          const prediction = model.predict(testVal) as tf.Tensor\n          prediction.print()\n          //返回每行最大值的索引\n          const pIndex: any = tf.argMax(prediction, 1).dataSync()\n          const classNames = [\"Setosa\", \"Virginica\", \"Versicolor\"]\n          console.log(classNames[pIndex])\n        }\n      }\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h1>Tensor 张量</h1>\n      </div>\n    )\n  }\n}","import TestTensor from './TestTensor'\n\nexport default function Tensorflowd() {\n  return(\n    <div>\n      <TestTensor/>\n    </div>\n  )\n}"],"sourceRoot":""}